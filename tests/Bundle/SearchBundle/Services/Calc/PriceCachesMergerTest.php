<?php


namespace Tests\Bundle\SearchBundle\Services\Calc;


use Doctrine\ODM\MongoDB\DocumentManager;
use MBH\Bundle\BaseBundle\Lib\Test\WebTestCase;
use MBH\Bundle\HotelBundle\Document\Hotel;
use MBH\Bundle\HotelBundle\Document\RoomType;
use MBH\Bundle\PriceBundle\Document\Tariff;
use MBH\Bundle\SearchBundle\Services\Calc\PriceCachesMerger;

class PriceCachesMergerTest extends WebTestCase
{

    /** @var PriceCachesMerger */
    protected $service;

    /** @var DocumentManager */
    protected $dm;

    public function setUp()
    {
        $this->dm = $this->getContainer()->get('doctrine_mongodb.odm.default_document_manager');
        $this->service = $this->getContainer()->get('mbh_search.price_caches_merger');
        parent::setUp(); // TODO: Change the autogenerated stub
    }

    /** @dataProvider dataProvider */
    public function testGetMergedPriceCaches($data)
    {
        $begin = new \DateTime("midnight +{$data['beginOffset']} days");
        $end = new \DateTime("midnight +{$data['endOffset']} days");


        $period = $end->diff($begin)->format('%d');

        $dm = $this->dm;
        $hotel = $dm->getRepository(Hotel::class)->findOneBy([]);
        //** Категории как прикрутить ? */
        $roomTypes = $hotel->getRoomTypes()->toArray();
        $roomTypeName = $data['searchRoomTypeName'];

        $filter = function ($document) use (&$documentName){
            return $document->getName() === $documentName;
        };

        $roomTypeFiltered = array_filter($roomTypes, $filter);
        $roomType = reset($roomTypeFiltered);


        $roomTypeRepository = $dm->getRepository(RoomType::class);
        $tariffRepository = $dm->getRepository(Tariff::class);

        $roomType = $this->
        $actual = $this->service->getMergedPriceCaches();

        $this->assertNotNull($actual);
    }

    public function dataProvider(): array
    {
        return [
            [
                'data1' => [
                    'beginOffset' => '8',
                    'endOffset' => '15',
                    'searchHotelName' => 'nameOfHotel',
                    'searchRoomTypeName' => 'ThreeAndThreeAndIndividualPriceRoomType',
                    'searchTariffName' => 'UpTariff',
                    'expectedPriceCaches' => [
                        [
                            'offset' => 8,
                            'priceCacheTariffName' => 'UpTariff'
                        ],
                        [
                            'offset' => 9,
                            'priceCacheTariffName' => 'UpTariff'
                        ],
                        [
                            'offset' => 10,
                            'priceCacheTariffName' => 'UpTariff'
                        ],
                        [
                            'offset' => 11,
                            'priceCacheTariffName' => 'UpTariff'
                        ],
                        [
                            'offset' => 12,
                            'priceCacheTariffName' => 'UpTariff'
                        ],
                        [
                            'offset' => 13,
                            'priceCacheTariffName' => 'UpTariff'
                        ],
                        [
                            'offset' => 14,
                            'priceCacheTariffName' => 'UpTariff'
                        ],
                    ]

                ]
            ]
        ];
    }

}