{% set currentSizes = sizes[stylesFileNumber] %}
{% set tableCellHeight = currentSizes['tableCellHeight'] %}
{% set tableCellWidth = currentSizes['tableCellWidth'] %}
{% set headerWidth = currentSizes['headerWidth'] %}
{% set titleSubFontSize = currentSizes['titleSubFontSize'] %}
{% set tileFontSize = currentSizes['tileFontSize'] %}
{% set leftRoomsAndNoAccFontSize = currentSizes['leftRoomsAndNoAccFontSize'] %}
{% set dayTopPadding = currentSizes['dayTopPadding'] %}
{% set titleSubPadding = currentSizes['titleSubPadding'] %}
{% set titleSubFontSize = currentSizes['titleSubFontSize'] %}

{% set headerHeight = tableCellHeight * 2 + 1 %}
{% set dayTableWidth = days|length * tableCellWidth %}
{% set subtrahend = (tableCellHeight / 5)|round %}
{% set numberOfRoomsOptions = [0, 20,30, 50] %}

{% set minuend = tableCellHeight - subtrahend %}
{% set halfMinuend = (minuend / 2)|round %}

{% set quarterMinuend = (minuend / 4)|round %}

<style>
    .package, .dividing-line {
        height: {{ minuend }}px !important;
    }

    .success, .with-right-divider.success:before {
        background-color: {{ colors['success'] }} !important;
    }

    .warning, .with-right-divider.warning:before {
        background-color: {{ colors['warning'] }} !important;
    }

    .danger, .with-right-divider.danger:before {
        background-color: {{ colors['danger'] }} !important;
    }

    .package-with-right-arrow:before {
        right: {{ quarterMinuend }}px !important;
    }

    .danger.package-with-right-arrow:before, .package.package-with-right-arrow:before {
        border-left: {{ quarterMinuend }}px solid {{ colors['danger'] }} !important;
    }

    .success.package-with-right-arrow:before {
        border-left: {{ quarterMinuend }}px solid {{ colors['success'] }} !important;
    }

    .warning.package-with-right-arrow:before {
        border-left: {{ quarterMinuend }}px solid {{ colors['warning'] }} !important;
    }

    #accommodation-chessBoard-content .achtung {
        background-color: {{ colors['unplaced'] }} !important;
    }

    .danger:not(.near-right-element) > .ui-resizable-e {
        border-left: {{ quarterMinuend }}px solid {{ colors['danger_add'] }} !important;
    }

    .danger:not(.near-left-element) > .ui-resizable-w {
        border-right: {{ quarterMinuend }}px solid {{ colors['danger_add'] }} !important;
    }

    .warning:not(.near-right-element) > .ui-resizable-e {
        border-left: {{ quarterMinuend }}px solid {{ colors['warning_add'] }} !important;
    }

    .warning:not(.near-left-element) > .ui-resizable-w {
        border-right: {{ quarterMinuend }}px solid {{ colors['warning_add'] }} !important;
    }

    .success:not(.near-right-element) > .ui-resizable-e {
        border-left: {{ quarterMinuend }}px solid {{ colors['success_add'] }} !important;
    }

    .success:not(.near-left-element) > .ui-resizable-w {
        border-right: {{ quarterMinuend }}px solid {{ colors['success_add'] }} !important;
    }

    .ui-resizable-e.early-checkin-block, .ui-resizable-w.early-checkin-block {
        border-right: {{ quarterMinuend }}px solid #65619b !important;
    }

    .danger.near-left-element > .ui-resizable-w,
    .package.near-left-element > .ui-resizable-w,
    .danger.near-right-element > .ui-resizable-e,
    .package.near-right-element > .ui-resizable-e,
    .danger > .resizable-appendix {
        background-color: {{ colors['danger_add'] }} !important;
    }

    .success.near-left-element > .ui-resizable-w,
    .success > .resizable-appendix,
    .success.near-right-element > .ui-resizable-e {
        background-color: {{ colors['success_add'] }} !important;
    }

    .warning.near-left-element > .ui-resizable-w,
    .warning.near-right-element > .ui-resizable-e,
    .warning > .resizable-appendix {
        background-color: {{ colors['warning_add'] }} !important;
    }

    .package-with-left-arrow:after,
    .package-with-right-arrow:before,
    .package:not(.near-right-element) > .ui-resizable-e,
    .package:not(.near-left-element) > .ui-resizable-w {
        border-bottom: {{ halfMinuend }}px solid transparent !important;
        border-top: {{ halfMinuend }}px solid transparent !important;
    }

    .package-with-left-arrow:after, .package:not(.near-left-element) > .ui-resizable-w {
        left: {{ quarterMinuend *(-1) }}px !important;
    }

    .success.package-with-left-arrow:after {
        border-right: {{ quarterMinuend }}px solid {{ colors['success'] }} !important;
    }

    .warning.package-with-left-arrow:after {
        border-right: {{ quarterMinuend }}px solid {{ colors['warning'] }} !important;
    }

    .danger.package-with-left-arrow:after {
        border-right: {{ quarterMinuend }}px solid {{ colors['danger'] }} !important;
    }

    .with-left-divider:after, .with-right-divider:before {
        top: {{ (minuend - tileFontSize)/2 }}px !important;
    }

    .package-with-right-arrow:before, .package:not(.near-right-element) > .ui-resizable-e {
        right: {{ quarterMinuend * (-1) }}px !important;
    }

    .near-right-element > .ui-resizable-e, .near-left-element > .ui-resizable-w {
        height: {{ minuend }}px !important;
    }

    .near-left-element > .ui-resizable-e, .near-right-element > .ui-resizable-w {
        height: {{ minuend }}px !important;
    }

    .package-description {
        margin: {{ ((minuend - titleSubFontSize - (2 * 3)) / 2)|round(0, 'floor') }}px auto !important;
    }

    .danger.tile-coming-out {
        background: repeating-linear-gradient(-45deg, transparent, transparent 4px, {{ colors['danger_add'] }} 5px, {{ colors['danger_add'] }} 5px);
        background-size: 1em 1em;
    }

    .danger.tile-coming {
        background: repeating-linear-gradient(-45deg, transparent, transparent 1px, {{ colors['danger_add'] }} 3px, {{ colors['danger_add'] }} 5px);
        background-size: 1em 1em;
    }

    .success.tile-coming-out {
        background: repeating-linear-gradient(-45deg, transparent, transparent 4px, {{ colors['success_add'] }} 5px, {{ colors['success_add'] }} 5px);
        background-size: 1em 1em;
    }

    .success.tile-coming {
        background: repeating-linear-gradient(-45deg, transparent, transparent 1px, {{ colors['success_add'] }} 3px, {{ colors['success_add'] }} 5px);
        background-size: 1em 1em;
    }

    .warning.tile-coming-out {
        background: repeating-linear-gradient(-45deg, transparent, transparent 4px, {{ colors['warning_add'] }} 5px, {{ colors['warning_add'] }} 5px);
        background-size: 1em 1em;
    }

    .warning.tile-coming {
        background: repeating-linear-gradient(-45deg, transparent, transparent 1px, {{ colors['warning_add'] }} 3px, {{ colors['warning_add'] }} 5px);
        background-size: 1em 1em;
    }

    .ui-resizable-w.early-checkin-block {
        border-right-color: #000 !important;
    }
</style>

{% if stylesFileNumber == 0 %}
    {% stylesheets filter='cssrewrite, uglifycss'
        '@MBHPackageBundle/Resources/public/css/chessboard/chessboard_0.less' %}
        <link rel="stylesheet" href="{{ asset_url }}"/>
    {% endstylesheets %}
{% elseif stylesFileNumber == 1 %}
    {% stylesheets filter='cssrewrite, uglifycss'
        '@MBHPackageBundle/Resources/public/css/chessboard/chessboard_1.less' %}
        <link rel="stylesheet" href="{{ asset_url }}"/>
    {% endstylesheets %}
{% elseif stylesFileNumber == 2 %}
    {% stylesheets filter='cssrewrite, uglifycss'
        '@MBHPackageBundle/Resources/public/css/chessboard/chessboard_2.less' %}
        <link rel="stylesheet" href="{{ asset_url }}"/>
    {% endstylesheets %}
{% elseif stylesFileNumber == 3 %}
    {% stylesheets filter='cssrewrite, uglifycss'
        '@MBHPackageBundle/Resources/public/css/chessboard/chessboard_3.less' %}
        <link rel="stylesheet" href="{{ asset_url }}"/>
    {% endstylesheets %}
{% endif %}

<script>
    var packages = JSON.parse('{{ packages|raw }}');
    var leftRoomsData = JSON.parse('{{ leftRoomsJsonData|raw }}');
    var noAccommodationIntervals = JSON.parse('{{ noAccommodationIntervals|raw }}');
    var noAccommodationCounts = JSON.parse('{{ noAccommodationCounts|raw }}');
    var styleConfigs = JSON.parse('{{ sizes|json_encode|raw }}');
    var currentStyleConfigNumber = {{ stylesFileNumber }};
    var subtrahend = {{ subtrahend }};
    var colors = JSON.parse('{{ colors|json_encode|raw }}');

    var roomTypes = [];
    var rooms = [];
    {% for roomTypeID, roomTypeData in roomTypesData %}
        {% for roomId, roomData in roomTypeData['rooms'] %}
            rooms['{{ roomId }}'] = '{{ roomData.name }}';
        {% endfor %}
    roomTypes['{{ roomTypeID }}'] = '{{ roomTypeData.name }}';
    {% endfor %}
</script>

<input type="hidden" name="begin" id="accommodation-report-begin" class="hidden" value="{{ beginDate|date('d.m.Y') }}">
<input type="hidden" name="end" id="accommodation-report-end" class="hidden" value="{{ endDate|date('d.m.Y') }}">
<input type="hidden" id="pageNumber" value="{{ pageNumber }}">

{% include 'MBHBaseBundle:Partials:pager.html.twig' with {'page': pageNumber, 'pages': pageCount, class : 'accommodation-report-pagination'} %}

<div id="accommodation-chessBoard-content" class="scrolling">
    <!---------------------------- MONTHS AND DATES ------------------------->
    <div id="header-title" class="tile tile-not-selected tile-free both not-standard-tile"
         style="width:{{ headerWidth }}px;">
        <div class="title" style="height: {{ headerHeight - 1 }}px; background-color: white;">
            <div class="tableTitleCell">
                {% set selectedNumberOfRooms = client_config().getFrontSettings().getRoomsInChessboard(app.user.username) %}
                <select id="nuber-of-rooms-select" style="width: 100%;">
                    {% for numberOfRooms in numberOfRoomsOptions %}
                        <option value="{{ numberOfRooms }}" {{ numberOfRooms == selectedNumberOfRooms ? 'selected' }}>
                            {{ numberOfRooms == 0 ? 'chessboard.index.number_of_rooms_select.all_rooms'|trans : ' ' ~ 'chessboard.index.number_of_rooms_select.rooms'|trans({'%numberOfRooms%': numberOfRooms}) }}
                        </option>
                    {% endfor %}
                </select>
            </div>
            <div class="tableTitleCell">
            </div>
        </div>
    </div>
    <div id="months-and-dates"
         style="background-color: white; position: absolute;  z-index: 200; left: {{ headerWidth }}px; width:{{ dayTableWidth }}px; height: {{ headerHeight }}px;">
        <div class="calendarRow clearfix">
            <ul class="list-unstyled calendarDays">
                {% for monthDays in calendarData %}
                    <li class="tile tile-not-selected tile-free both not-standard-tile"
                        style="width:{{ monthDays.daysCount * tableCellWidth }}px;">
                        <div class="month" style="width:{{ monthDays.daysCount * tableCellWidth }}px;">
                            {{ monthDays.daysCount > 2 ? (months[monthDays.month])|trans({}, 'front_messages') ~ ', ' ~ monthDays.year }}
                        </div>
                    </li>
                {% endfor %}
            </ul>
        </div>
        <div class="calendarRow clearfix">
            <ul class="list-unstyled calendarDays">
                {% for day in days %}
                    {% set isWeekend = day|date('N') in [6,7] %}
                    {% set isNow = day|date('d.m.Y') == 'now'|date('d.m.Y') %}
                    <li class="tile tile-bookable tile-free both {{ isNow ? 'today' }} {% if isWeekend %}weekend{% endif %}">
                        <div class="day">
                            <div class="{{ isWeekend ? 'text-danger' }}{{ isNow ? 'text-info' }}">{{ day|date('d.m') }}
                                <span>{{ day|date('Y') == 'now'|date('Y') ? weekdays[day|date('N')]|trans({}, 'front_messages')|lower : day|date('Y') }}</span>
                            </div>
                        </div>
                    </li>
                {% endfor %}
            </ul>
        </div>
    </div>
    <!---------------------------- ROOM TYPES ------------------------->
    <div id="roomTypeColumn">
        {% set titleLength = ((headerWidth / titleSubFontSize) * 1.3)|round(1, 'floor') %}
        {% set withoutAccommodationText = 'chessboard_manager.without_accommodation.tile.text'|trans %}
        {% for roomTypeId, roomTypeData in roomTypesData %}
            {% if roomTypeData['rooms']|length > 0 %}
                <div class="clearfix">
                    <ul class="calendarDays list-unstyled">
                        <li class="tile tile-not-selected tile-free both not-standard-tile"
                            style="width:{{ headerWidth - 1 }}px; background-color: white;">
                            <div class="title">
                                <strong {% if not roomTypeData.isEnabled %} class="disabled-room-type"{% endif %}
                                        {% if roomTypeData.name|length > titleLength %} data-html="true" data-toggle="tooltip" data-container="body" data-placement="top" title="{{ roomTypeData.name }}" {% endif %}
                                        class="roomType-text">

                                    <i class="fa fa-bed"></i> {{ roomTypeData.name[0:titleLength] }}</strong>
                            </div>
                        </li>
                        <li class="tile tile-not-selected tile-free both not-standard-tile"
                            style="width:{{ headerWidth }}px;">
                            <div class="title-sub">
                                {% set withoutAccommodationText = 'chessboard_manager.without_accommodation.tile.text'|trans %}
                                <div {% if withoutAccommodationText|length > titleLength %} data-html="true" data-toggle="tooltip" data-container="body" data-placement="top" title="{{ withoutAccommodationText }}" {% endif %}>
                                    {{ withoutAccommodationText[0:titleLength] }}
                                </div>
                            </div>
                        </li>
                        {% for key, roomData in roomTypeData['rooms'] %}
                            <li class="tile tile-not-selected tile-free both not-standard-tile"
                                style="width:{{ headerWidth }}px;">
                                <div class="title-sub">
                                    {% set toolTip = '' %}
                                    {% if roomData.room.housing %}
                                        {% set toolTip = 'chessboard.index.housing'|trans ~ ' "' ~ roomData.room.housing.name ~'"' %}
                                    {% endif %}
                                    {% if roomData.room.floor %}
                                        {% set floorText = "chessboard.index.floor"|trans ~ " " ~ roomData.room.floor %}
                                        {% if toolTip is empty %}
                                            {% set toolTip = floorText %}
                                        {% else %}
                                            {% set toolTip = toolTip ~ '<br>' ~ floorText %}
                                        {% endif %}
                                    {% endif %}

                                    <a {% if toolTip != '' %} data-html="true" data-toggle="tooltip" data-container="body" data-placement="top" title="{{ toolTip }}" {% endif %}>{{ roomData.name[0:20] }}</a>

                                    <div class="text-right" style="height: {{ tileFontSize }}px;">
                                        {% if roomData.statuses is iterable and roomData.statuses is not empty %}
                                            {% for status in roomData.statuses %}
                                                {% if status.code in roomStatusIcons|keys %}
                                                    <i style="position: relative; bottom: 10px; font-size: {{ tileFontSize }}px;"
                                                       data-container="body"
                                                       class=" fa mbf-{{ roomStatusIcons[status.code] }}"
                                                       title="{{ status }}" data-toggle="tooltip"></i>
                                                {% endif %}
                                            {% endfor %}
                                        {% endif %}
                                    </div>
                                </div>
                            </li>
                        {% endfor %}
                    </ul>
                </div>
            {% endif %}
        {% endfor %}
    </div>
    <div id="calendarWrapper" style="width:{{ dayTableWidth }}px;">
        <div class="days">
            <div class="clearfix" style="display: inline-block;">
                <div class="calendarRows clearfix ">

                    <!---------------------------- ROOMS ------------------------->
                    <div class="rooms" style="margin-top: {{ headerHeight }}px;">
                        {% for roomTypeId, roomTypeData in roomTypesData %}
                            {% if roomTypeData['rooms']|length > 0 %}
                                <div class="calendarRow clearfix leftRoomsLine"
                                     data-roomTypeId="{{ roomTypeId }}">
                                    <ul class="list-unstyled calendarDays">
                                        {% if leftRoomsData[roomTypeId] is defined %}
                                            {% for leftRoomsCount in leftRoomsData[roomTypeId] %}
                                                {% set day = days[loop.index - 1] %}
                                                {% if day|date('N') in [6,7] %}{% set weekend = 'weekend' %}{% else %}{% set weekend = null %}{% endif %}
                                                {% if day|date('d.m.Y') == 'now'|date('d.m.Y') %}{% set today = 'today' %}{% else %}{% set today = null %}{% endif %}
                                                {% set leftRoomsBackgroundColor = colors['leftRoomsPositive'] %}
                                                {% set isNegativeCount = false %}
                                                {% if leftRoomsCount == 0 %}
                                                    {% set isNegativeCount = true %}
                                                    {% set leftRoomsBackgroundColor = colors['leftRoomsZero'] %}
                                                {% elseif leftRoomsCount < 0 %}
                                                    {% set leftRoomsBackgroundColor = colors['leftRoomsNegative'] %}
                                                    {% set isNegativeCount = true %}
                                                {% endif %}
                                                <li class="tile {{ weekend }} {{ today }}"
                                                    style="background-color: {{ leftRoomsBackgroundColor }};
                                                    {% if isNegativeCount %} color: #DC2814;{% endif %}"
                                                    title="{{ 'chessboard_manager.left_rooms_count.tooltip_title'|trans({'%count%' : leftRoomsCount}, 'front_messages') }}"
                                                    data-toggle="tooltip" data-placement="bottom"
                                                    data-container="body">
                                                    <div class="leftRooms">
                                                        {{ leftRoomsCount }}
                                                    </div>
                                                </li>
                                            {% endfor %}
                                        {% else %}
                                            {% for day in days %}
                                                <li class=" tile tile-bookable tile-free both">
                                                    <div class="no-accommodation-date" data-container="body"
                                                         data-placement="bottom" data-html="true"
                                                         title="{{ 'chessboard_manager.without_accommodation.tile.text'|trans }}"
                                                         tabindex="0"
                                                         data-date="{{ day|date('d.m.Y') }}"
                                                         data-toggle="popover">
                                                    </div>
                                                </li>
                                            {% endfor %}
                                        {% endif %}
                                    </ul>
                                </div>
                                <div class="roomTypeRooms" id="{{ roomTypeId }}">
                                    <div class="calendarRow clearfix roomDates">
                                        <ul class="calendarDates list-unstyled"
                                            id="{{ 'no_accommodation' ~ roomTypeId }}">
                                            {% for day in days %}
                                                {% if day.date|date('N') in [6,7] %}{% set weekend = 'weekend' %}{% else %}{% set weekend = null %}{% endif %}
                                                {% if day.date|date('d.m.Y') == 'now'|date('d.m.Y') %}{% set today = 'today' %}{% else %}{% set today = null %}{% endif %}
                                                <li class="{{ weekend }} {{ today }} tile tile-bookable tile-free both">
                                                    <div class="no-accommodation-date" data-container="body"
                                                         data-placement="bottom" data-html="true"
                                                         title="{{ 'chessboard_manager.without_accommodation.tile.text'|trans }}"
                                                         tabindex="0"
                                                         data-date="{{ day|date('d.m.Y') }}"
                                                         data-toggle="popover">
                                                    </div>
                                                </li>
                                            {% endfor %}
                                        </ul>
                                    </div>
                                    {% for key, roomData in roomTypeData['rooms'] %}
                                        <div class="calendarRow clearfix roomDates">
                                            <ul class="calendarDates list-unstyled" id="{{ key }}">
                                                {% for day in days %}
                                                    {% if day.date|date('N') in [6,7] %}{% set weekend = 'weekend' %}{% else %}{% set weekend = null %}{% endif %}
                                                    {% if day.date|date('d.m.Y') == 'now'|date('d.m.Y') %}{% set today = 'today' %}{% else %}{% set today = null %}{% endif %}
                                                    <li class="{{ weekend }} {{ today }} tile tile-bookable tile-free both">
                                                        <div class="date">
                                                            <div class="{{ day|date('N') in [6,7] ? 'text-danger' }}{{ day|date('d.m.Y') == 'now'|date('d.m.Y') ? 'text-info' }}">{{ day|date('d.m') }}
                                                                <span>{{ day|date('Y') == 'now'|date('Y') ? (weekdays[day|date('N')])|trans({}, 'front_messages')|lower : day|date('Y') }}</span>
                                                            </div>
                                                        </div>
                                                    </li>
                                                {% endfor %}
                                            </ul>
                                        </div>
                                    {% endfor %}
                                </div>
                            {% endif %}
                        {% endfor %}
                    </div>
                </div>
            </div>
        </div>
    </div>


</div>