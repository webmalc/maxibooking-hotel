{#{% wrapinline %}#}
{% autoescape %}
var mbhIframe = {
  idFormPayment    : 'go-form',
  initEvent        : false,
  typePostMessage  : 'mbh-payment-form',
  urlPostMessage   : '{{ referer }}',
  addFormPayment   : function(data) {
    var html = '<form id="' + this.idFormPayment +
        '" method="post" action="{{ url('online_form_api_newrbk_generate_invoice') }}">' +
        '<div class="form-group form-group-sm"> ' +
        '<label for="total" class="col-form-label col-form-label-sm">Cумма к оплате</label>' +
        '<input type="number" class="form-control input-sm" name="total" value="' + data.total + '">' +
        '</div>' +
        '<input type="hidden" name="packageId" value="' + data.packageId + '">' +
        '<div class="form-group">' +
        '<input type="submit" value="Оплатить" class="btn btn-success btn-sm">' +
        '</div>'
    ;
    html += '</form>';

    return html;
  },
  addListener      : function() {
    var self = this;
    window.addEventListener("message", function(e) {
      if (e.origin != self.urlPostMessage) {
          {#// что-то прислали с неизвестного домена - проигнорируем..#}
        return;
      }
      if (e.data.type !== self.typePostMessage) {
        return;
      }

      console.info("получено on frame: " + e.data.data);
    });
  },
  sendMsg          : function(form) {
    var self = this;
    $.post(form.action, $(form).serialize()).done(function(data) {
      if (data.status == true) {
        window.parent.postMessage({type: self.typePostMessage, data: data.data}, self.urlPostMessage);
      }
        {% if app.environment == 'dev' %}
      if (data.status == false) {
        console.error(data.data);
      }
        {% endif %}
    })

  },
  addEventForForm  : function() {
    if (this.initEvent === false) {
      var self = this;
      formPayment = document.getElementById(this.idFormPayment);
      formPayment.addEventListener('submit', function(e) {
        e.preventDefault();

        self.sendMsg(this);
      })
    }
  },
  idFormSearch     : '{{ formId }}',
  idDivResultSearch: '{{ idDivResultSearch }}',
  updateResultDiv  : function(type, data) {
    var $divResult = $('#' + this.idDivResultSearch);
    $divResult.removeClass();
    if (type == false) {
        $divResult.find('.panel-body').html('');
    } else {
      $divResult.addClass('panel panel-' + type).find('.panel-body').html(data);
    }
  }
};

window.onload = function(e) {

  if (typeof $ === 'undefined') {
    console.error('no jquery');
    return;
  }

  mbhIframe.addListener();

  var $form = $('#' + mbhIframe.idFormSearch);

  $form.submit(function(e) {
    e.preventDefault();
    $.post(this.action, $(this).serialize())
      .done(function(data) {
        if (typeof data.error !== 'undefined') {
          mbhIframe.updateResultDiv('danger', data.error);
        } else {
          if (data.needIsPaid) {
            mbhIframe.updateResultDiv('info', mbhIframe.addFormPayment(data.data));
            mbhIframe.addEventForForm();
          } else {
            mbhIframe.updateResultDiv('success', data.data);
          }
        }
      }).error(function(error) {
        console.log(error);
      });
  });

  $form.change(function(e) {
    mbhIframe.updateResultDiv(false);
  })
};
{% endautoescape %}
{#{% endwrapinline %}#}