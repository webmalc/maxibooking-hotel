imports:
    - { resource: doctrine_extensions.yml }

services:
    twig.text_extension:
        class: Twig_Extensions_Extension_Text
        tags:
            - name: twig.extension
    twig.intl_extension:
        class: Twig_Extensions_Extension_Intl
        tags:
            - name: twig.extension

    twig.date_extension:
        class: Twig_Extensions_Extension_Date
        tags:
            - name: twig.extension

    doctrine_odm.mongodb.validator.unique:
      class: MBH\Bundle\BaseBundle\Validator\Constraints\UniqueEntityValidator
      arguments:
        - '@doctrine_mongodb'
      tags:
        - { name: validator.constraint_validator, alias: doctrine_odm.mongodb.unique }

    mbh.base_on_controller_listener:
        class: MBH\Bundle\BaseBundle\EventListener\OnController
        arguments: ['@service_container']
        tags:
            - { name: kernel.event_listener, event: kernel.controller, method: onKernelController }

    mongodb_acl_provider:
            parent: doctrine_mongodb.odm.security.acl.provider

    mbh.twig.hotel_selector_extension:
        class: MBH\Bundle\BaseBundle\Twig\HotelSelectorExtension
        arguments: ['@service_container']
        tags:
            - { name: twig.extension }

    mbh.twig.extension:
        class: MBH\Bundle\BaseBundle\Twig\Extension
        arguments: ['@service_container']
        tags:
            - { name: twig.extension }
            
    mbh.form.fieldset_extension:
        class: MBH\Bundle\BaseBundle\Form\Extension\FieldsetExtension
        tags:
            - { name: form.type_extension, extended_type: Symfony\Component\Form\Extension\Core\Type\FormType, alias: form }
            
    mbh.form.help_extension:
        class: MBH\Bundle\BaseBundle\Form\Extension\HelpMessageTypeExtension
        tags:
            - { name: form.type_extension, extended_type: Symfony\Component\Form\Extension\Core\Type\FormType, alias: form }
            
    mbh.form.bottom_extension:
        class: MBH\Bundle\BaseBundle\Form\Extension\BottomMessageTypeExtension
        tags:
            - { name: form.type_extension, alias: form, extended_type: Symfony\Component\Form\Extension\Core\Type\FormType }
            
    mbh.hotel.selector:
        class: MBH\Bundle\BaseBundle\Service\HotelSelector
        arguments: ['@service_container']

    mbh.currency:
            class: MBH\Bundle\BaseBundle\Service\Currency
            arguments: ['@service_container']

    mbh.helper:
            class: MBH\Bundle\BaseBundle\Service\Helper
            arguments: ['@service_container']

    mbh.pdf_generator:
        class: MBH\Bundle\BaseBundle\Service\PdfGenerator
        calls:
              - [ setContainer, [ '@service_container' ] ]

    mbh.mongo:
          class: MBH\Bundle\BaseBundle\Service\Mongo
          arguments: ['@service_container']

    doctrine_mongo_db_param_converter:
        class: Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DoctrineParamConverter
        arguments: ['@doctrine_mongodb']
        tags:
          - { name: request.param_converter, converter: doctrine.odm }

    mbh.address:
        class: MBH\Bundle\BaseBundle\Service\Address
        arguments:
            - '@mbh.billing.api'

    #Notifiers
    mbh.notifier:
      class: MBH\Bundle\BaseBundle\Service\Messenger\Notifier
      calls:
        - [attach, ["@mbh.system.messenger"]]
        - [attach, ["@mbh.mailer"]]
      arguments: ['@service_container', "@mbh.mailer.logger"]

    mbh.notifier.mailer:
          class: MBH\Bundle\BaseBundle\Service\Messenger\Notifier
          calls:
            - [attach, ["@mbh.mailer"]]
          arguments: ['@service_container', "@mbh.mailer.logger"]

    mbh.mailer:
      class: MBH\Bundle\BaseBundle\Service\Messenger\Mailer
      arguments: ['@service_container']

    mbh.system.messenger:
      class: MBH\Bundle\BaseBundle\Service\Messenger\Messenger
      arguments: ['@service_container']


    form.type.facilities:
        class: MBH\Bundle\BaseBundle\Form\FacilitiesType
        calls:
            - [ setContainer, [ '@service_container' ] ]
        tags:
            - { name: form.type, alias: mbh_facilities }
    form.type.language:
        class: MBH\Bundle\BaseBundle\Form\LanguageType
        calls:
            - [ setContainer, [ '@service_container' ] ]
        tags:
            - { name: form.type, alias: mbh_language }

    mbh.event_listener.check_relation_subscriber:
            class: MBH\Bundle\BaseBundle\EventListener\OnRemoveSubscriber\RemoveSubscriber
            arguments: ['@service_container']
            tags:
                - { name: doctrine_mongodb.odm.event_subscriber, connection: default}


    mbh.event_listener.versioned_subscriber:
            class: MBH\Bundle\BaseBundle\EventListener\VersionedSubscriber
            arguments: ["@service_container"]
            tags:
                - { name: doctrine_mongodb.odm.event_subscriber, connection: default}

    mbh.event_listener.disable_listener:
        class: MBH\Bundle\BaseBundle\Lib\Disableable\DisableableSubscriber
        tags:
            - { name: doctrine_mongodb.odm.event_subscriber, connection: default}

    mbh.event_listener.hotelable_listener:
        class: MBH\Bundle\BaseBundle\EventListener\HotelableListener
        arguments: ['@mbh.hotel.selector']
        tags:
            - { name: doctrine_mongodb.odm.event_subscriber, connection: default}
    mbh.get_set_method_normalizer:
        class: Symfony\Component\Serializer\Normalizer\GetSetMethodNormalizer
        tags:
            - { name: serializer.normalizer }

    mbh.validator.range:
        class: MBH\Bundle\BaseBundle\Validator\Constraints\RangeValidator
        tags:
            - { name: validator.constraint_validator, alias: mbh_range }

    mbh.event_listener.generate_internationl_listener:
        class: MBH\Bundle\BaseBundle\EventListener\GenerateInternationalListener
        tags:
            - { name: doctrine_mongodb.odm.event_subscriber, connection: default}
 
    mbh.cache:
        class: MBH\Bundle\BaseBundle\Service\Cache
        arguments:
          - '%mbh_cache%'
          - '%mbh_redis%'
          - '@doctrine_mongodb'
          - '@validator'
          - '@mbh.cache.logger'
          - '@mbh.mongo'

    mbh.task.logger:
        class:     Symfony\Bridge\Monolog\Logger
        arguments: ['task']
        calls:
            - [pushHandler, ['@mbh.task.logger_handler']]

    mbh.task.logger_handler:
        class:     Monolog\Handler\StreamHandler
        arguments: ["%kernel.logs_dir%/%kernel.environment%.task.log", 200]


    #Translation
    mbh.base.command.translate:
        class:  MBH\Bundle\BaseBundle\Command\TranslatorCommand
        arguments: ['mbh:translation']
        calls:
            - [ addConverter, ['@mbh.base.lib.document_translator' ]]
            - [ addConverter, ['@mbh.base.lib.twig_translator' ]]
            - [ addConverter, ['@mbh.base.lib.form_translator' ]]
            - [ addConverter, ['@mbh.base.lib.service_translator' ]]
            - [ addConverter, ['@mbh.base.lib.services_translator' ]]
        tags:
            - { name: console.command }

    mbh.base.lib.abstract_translator:
        class: MBH\Bundle\BaseBundle\Lib\RuTranslateConverter\AbstractTranslateConverter
        abstract: true
        arguments: ['@translation.loader','@translation.writer', '@mbh.task.logger']

    mbh.base.lib.document_translator:
        class: MBH\Bundle\BaseBundle\Lib\RuTranslateConverter\DocumentTranslateConverter
        parent: mbh.base.lib.abstract_translator

    mbh.base.lib.twig_translator:
        class: MBH\Bundle\BaseBundle\Lib\RuTranslateConverter\TwigTranslateConverter
        parent: mbh.base.lib.abstract_translator

    mbh.base.lib.form_translator:
        class: MBH\Bundle\BaseBundle\Lib\RuTranslateConverter\FormTranslateConverter
        parent: mbh.base.lib.abstract_translator

    mbh.base.lib.service_translator:
        class: MBH\Bundle\BaseBundle\Lib\RuTranslateConverter\ServiceTranslateConverter
        parent: mbh.base.lib.abstract_translator

    mbh.base.lib.services_translator:
        class: MBH\Bundle\BaseBundle\Lib\RuTranslateConverter\ServicesTranslateConverter
        parent: mbh.base.lib.abstract_translator
        
    mbh.cache.logger:
        class:     Symfony\Bridge\Monolog\Logger
        arguments: [app]
        calls:
            - [pushHandler, ['@mbh.cache.logger_handler']]



    mbh.cache.logger_handler:
        class:     Monolog\Handler\StreamHandler
        arguments: ["%kernel.logs_dir%/%kernel.environment%.cache.log", 200]

    mbh.mailer.logger:
        class:     Symfony\Bridge\Monolog\Logger
        arguments: ['mailer']
        calls:
            - [pushHandler, ['@mbh.mailer.logger_handler']]

    mbh.universal_command.logger_handler:
        class:     Monolog\Handler\StreamHandler
        arguments: ["%kernel.logs_dir%/%kernel.environment%.universal.log", 200]

    mbh.universal_command.logger:
        class:     Symfony\Bridge\Monolog\Logger
        arguments: ['app']
        calls:
            - [pushHandler, ['@mbh.universal_command.logger_handler']]

    mbh_bundle_base.command.universal_command:
        class: MBH\Bundle\BaseBundle\Command\UniversalCommand
        arguments: ["@mbh.universal_command.logger"]
        calls:
            - [setContainer, ['@service_container']]
        tags:
            - { name: console.command }

    mbh.mailer.logger_handler:
        public: false
        class: Monolog\Handler\StreamHandler
        arguments: ["%kernel.logs_dir%/%kernel.environment%.mailer.log", 200]

    task_command_runner:
        class:      MBH\Bundle\BaseBundle\Task\CommandRunner
        arguments:  ["@mbh.task.logger", "@kernel", "@mbh.exception_manager"]

    mbh.locale.subscriber:
        class: MBH\Bundle\BaseBundle\EventListener\LocaleSubscriber
        arguments: ['%kernel.default_locale%',  '@translator', '%mbh.languages%', '@stof_doctrine_extensions.listener.translatable']
        tags:
          - { name: kernel.event_subscriber }

    mbh.base_on_request_listener:
        class: MBH\Bundle\BaseBundle\EventListener\OnRequest
        arguments: ['@service_container']
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest }

    mbh.time_zone.subscriber:
        class: MBH\Bundle\BaseBundle\EventListener\TimeZoneSubscriber
        arguments: ['@mbh.helper']
        tags:
            - {name: kernel.event_subscriber}

    mbh.mongodb.context_service:
        class: 'resource'
        factory: 'stream_context_create'
        arguments:
          - { ssl: { verify_expiry: false, allow_self_signed: true }}

    mbh.instance_info.collector:
        class: 'MBH\Bundle\BaseBundle\DataCollector\InstanceInfoCollector'
        public: false
        arguments: ["@kernel"]
        tags:
          -
            name: 'data_collector'
            template: "@MBHBase/Profiler/instance.profiler.html.twig"
            id: 'client.instance.informer'

    mbh.image_migrate.logger:
        class:     Symfony\Bridge\Monolog\Logger
        arguments: [app]
        calls:
            - [pushHandler, ['@mbh.image_migrate.logger_handler']]
    mbh.image_migrate.logger_handler:
        public: false
        class:     Monolog\Handler\StreamHandler
        arguments: ["%kernel.logs_dir%/%kernel.environment%.image_migrate.log", 200]

    mbh.raw_mongo_data_handler:
        class: MBH\Bundle\BaseBundle\Service\Export\RawMongoDataHandler
        arguments:
            - '@mbh.helper'

    mbh.entities_exporter:
        class: MBH\Bundle\BaseBundle\Service\Export\CSVExporter
        arguments:
            - '@mbh.raw_mongo_data_handler'
            - '@translator'

    mbh.zip_manager:
        class: MBH\Bundle\BaseBundle\Service\Export\ZipManager

    mbh.command.image_migrate:
        class: MBH\Bundle\BaseBundle\Command\ImageMigrateCommand
        arguments: ['@mbh.service.ssh_commands', '@mbh.app.root_dir', '@mbh.client.name']
        tags:
            - { name: console.command }

    mbh.client.name:
        class: AppKernel
        factory: ['@kernel',getClient]

    mbh.app.root_dir:
        class: AppKernel
        factory: ['@kernel',getRootDir]

    mbh.swiftmailer.array.logger:
        public: false
        class: MBH\Bundle\BaseBundle\Lib\SwiftMailerLogger
        arguments: ['@mbh.mailer.logger']

    mbh.swiftmailer.logger:
        class: Swift_Plugins_LoggerPlugin
        arguments: ["@mbh.swiftmailer.array.logger"]
        tags:
            - { name: 'swiftmailer.default.plugin' }
    mbh.report:
        class: MBH\Bundle\BaseBundle\Lib\Report\Report
        shared: false
        arguments:
            - '@templating'

    mbh.csv_reader:
        class: MBH\Bundle\BaseBundle\Service\CsvReader
        arguments:
            - '@kernel'

    mbh.aws_s3.client:
        class: Aws\S3\S3Client
        factory: [Aws\S3\S3Client, 'factory']
        arguments:
            -
              version: latest
              region: '%s3_region%'
              credentials:
                  key: '%s3_id%'
                  secret: '%s3_secret%'

    mbh.imagine.cache.resolver.amazon_s3:
        class: Liip\ImagineBundle\Imagine\Cache\Resolver\AwsS3Resolver
        arguments:
            - '@mbh.aws_s3.client'
            - '%s3_bucket%'
        calls:
            - [ setCachePrefix, ["cache"]]

    mbh.imagine.protected.cache.resolver.amazon_s3:
        class: Liip\ImagineBundle\Imagine\Cache\Resolver\AwsS3Resolver
        arguments:
            - '@mbh.aws_s3.client'
            - '%s3_protected_bucket%'
        calls:
            - [ setCachePrefix, ["protected_cache"]]

    mbh.imagine.cache.resolver.amazon_s3.cache:
        class: Liip\ImagineBundle\Imagine\Cache\Resolver\CacheResolver
        arguments:
            - "@cache.memcache"
            - "@mbh.imagine.cache.resolver.amazon_s3"
            - { prefix: "amazon_s3" }
        tags:
            - { name: "liip_imagine.cache.resolver", resolver: "public_cached_images" }

    mbh.imagine.protected.cache.resolver.amazon_s3.cache:
        class: Liip\ImagineBundle\Imagine\Cache\Resolver\CacheResolver
        arguments:
            - "@cache.memcache"
            - "@mbh.imagine.protected.cache.resolver.amazon_s3"
            - { prefix: "protected_amazon_s3" }
        tags:
            - { name: "liip_imagine.cache.resolver", resolver: "protected_cached_images" }

#Didn't work
#    mbh.imagine.cache.resolver.proxy:
#        class: Liip\ImagineBundle\Imagine\Cache\Resolver\ProxyResolver
#        arguments:
#            - "@mbh.imagine.cache.resolver.amazon_s3.cache"
#            - [ "http://localhost:9090"]
#        tags:
#            - { name: "liip_imagine.cache.resolver", resolver: "proxy"}
    memcache:
        class: Memcache
        calls:
            - [connect, ["%memcache_host%", 11211 ]]

    cache.memcache:
        class: Doctrine\Common\Cache\MemcacheCache
        calls:
            - [ setMemcache, ["@memcache"]]

    mbh.form_data_handler:
        class: MBH\Bundle\BaseBundle\Service\FormDataHandler
        arguments: ['@translator', '@mbh.helper', '@mbh.multi_lang_translator', '@mbh.client_config_manager']

    mbh.protected.file.downloader:
        class: MBH\Bundle\BaseBundle\Service\ProtectedFileViewer
        arguments: ["@vich_uploader.download_handler", "@vich_uploader.templating.helper.uploader_helper","@liip_imagine.data.manager", "@liip_imagine.filter.manager"]

    mbh.mongodb.client:
        class: MongoClient
        arguments: ["mongodb://%mongodb_login%:%mongodb_password%@%mongodb_host%/%mongodb_database%%mongodb_options%"]

    mbh.session.handler.mongodb:
        class: Symfony\Component\HttpFoundation\Session\Storage\Handler\MongoDbSessionHandler
        arguments: ["@mbh.mongodb.client", {database: '%mongodb_database%', collection: "sessions" }]

    exception_notifier:
        class: MBH\Bundle\BaseBundle\Service\Messenger\Notifier
        arguments: ['@service_container', '@logger']
        calls:
            - [attach, ["@sentry_messenger"]]

    sentry_messenger:
        class: MBH\Bundle\BaseBundle\Service\Messenger\SentryMessenger
        arguments: ['@mbh.sentry_logger']

    mbh.sentry_logger:
        class:     Symfony\Bridge\Monolog\Logger
        arguments: ['sentry']
        calls:
            - [pushHandler, ['@mbh.raven_handler']]

    mbh.slack_messenger:
        class: MBH\Bundle\BaseBundle\Service\Messenger\SlackMessenger
        arguments: ['@logger', '@translator', '@kernel']

    mbh.instant_notifier:
        class: MBH\Bundle\BaseBundle\Service\Messenger\Notifier
        arguments: ['@service_container', '@logger']
        calls:
            - [attach, ['@mbh.slack_messenger']]
            - [attach, ["@mbh.mailer"]]

    mbh.raven_handler:
        class: Monolog\Handler\RavenHandler
        arguments: ['@mbh.raven_client']

    mbh.raven_client:
        class: Raven_Client
        arguments: ['%sentry_dsn%']
        public: false

    mbh.guides_data_service:
        class: MBH\Bundle\BaseBundle\Service\GuidesDataService
        arguments: ['@security.authorization_checker']

    mbh.yaml_manager:
        class: MBH\Bundle\BaseBundle\Service\YmlManager

    mbh.multi_languages_type:
        class: MBH\Bundle\BaseBundle\Form\MultiLanguagesType
        arguments: ['@mbh.client_config_manager', '@mbh.multi_lang_translator', '%locale%', '@property_accessor']
        tags:
            - {name: form.type}

    mbh.multi_lang_translator:
        class: MBH\Bundle\BaseBundle\Service\MultiLangTranslator
        arguments:
            - '@doctrine.odm.mongodb.document_manager'
            - '@mbh.helper'
            - '@property_accessor'
            - '@stof_doctrine_extensions.listener.translatable'
            - '%locale%'

    mbh.menu_builder:
        class: MBH\Bundle\BaseBundle\Menu\Builder
        arguments:
            - "@knp_menu.factory"
            - "@service_container"
        tags:
            - { name: knp_menu.menu_builder, method: mainMenu, alias: base_mainMenu }
            - { name: knp_menu.menu_builder, method: managementMenu, alias: base_managementMenu }
            - { name: knp_menu.menu_builder, method: createHotelMenu, alias: base_createHotelMenu }

    mbh.document_fields_manager:
        class: MBH\Bundle\BaseBundle\Service\DocumentFieldsManager
        arguments:
            - '@translator'
            - '@property_accessor'
            - '@annotation_reader'

    mbh.messages_store:
        class: MBH\Bundle\BaseBundle\Service\Messenger\MessagesStore
        arguments:
            - '@router'
            - '%locale%'
            - '%support%'
            - '%client%'
            - '@mbh.cm_wizard_manager'

    mbh.data_comparer:
        class: MBH\Bundle\BaseBundle\Service\DataComparer
        arguments: ['@property_accessor']

    mbh.periods_compiler:
        class: MBH\Bundle\BaseBundle\Service\PeriodsCompiler
        arguments: ['@mbh.data_comparer']

    mbh.warnings_compiler:
        class: MBH\Bundle\BaseBundle\Service\WarningsCompiler
        arguments: ['@doctrine.odm.mongodb.document_manager', '@translator', '@mbh.periods_compiler']

    mbh.form_builder:
        class: MBH\Bundle\BaseBundle\Service\MBHFormBuilder
        arguments:
            - '@mbh.client_config_manager'
            - '@form.factory'

    mbh.exception_manager:
        class: MBH\Bundle\BaseBundle\Service\ExceptionManager
        arguments: ['@exception_notifier', '@kernel', '@security.token_storage']