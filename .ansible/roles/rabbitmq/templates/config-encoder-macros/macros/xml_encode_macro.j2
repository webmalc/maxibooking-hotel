{#
 # Jinja2 macro which converts Python data structure to XML format
 #}

{%- macro xml_encode(
      item,
      first=[],
      indent="  ",
      level=0,
      prevkey=none) %}

  {%- if item is mapping %}
    {#- The item is a dict #}

    {%- set prev_list = [0] %}

    {%- for key, val in item.iteritems() | sort -%}
      {%- if first | length > 0 and prev_list[0] == 0 -%}
        {{ "\n" }}
      {%- endif -%}

      {%- if first.append(0) %}{% endif %}
      {%- if prev_list.insert(0, 0) and prev_list.remove(1) %}{% endif %}

      {%- if val is none -%}
        {{ indent * level ~ "<" ~ key ~ " />\n" }}
      {%- elif val is sequence and val is not string and val is not mapping -%}
        {#- Only if val is a list -#}
        {{ xml_encode(
            val,
            first=first,
            indent=indent,
            level=level,
            prevkey=key) }}
        {%- if prev_list.insert(0, 1) and prev_list.remove(1) %}{% endif %}
      {%- else -%}
        {{ indent * level }}<{{ key }}>{{ xml_encode(
            val,
            indent=indent,
            level=level+1) }}

        {%- if val is not string and val is not number and val is not none -%}
          {{ indent * level }}
        {%- endif -%}

        </{{ key.split(" ")[0] }}>

        {%- if loop.last -%}
          {{ "\n" }}
        {%- endif %}
      {%- endif %}
    {%- endfor %}

  {%- elif item is number or item is string or item in [True, False] %}
    {#- The item is a number, string or boolean -#}

    {{ item }}

  {%- elif item is none %}
    {#- Item is a value of an empty element #}

  {%- else %}
    {#- The item is a list #}

    {%- for e in item -%}
      {{ indent * level }}<{{ prevkey }}>{{ xml_encode(
          e,
          first=first,
          indent=indent,
          level=level+1,
          prevkey=prevkey) }}

      {%- if e is not string and e is not number and e is not none -%}
        {{ indent * level }}
      {%- endif -%}

      </{{ prevkey.split(" ")[0] }}>{{ "\n" }}
    {%- endfor %}
  {%- endif %}
{%- endmacro %}
